{"version":3,"file":"component---src-pages-index-tsx-0268a11b4ef3d3965325.js","mappings":"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","sources":["webpack://minimal-blog/./src/pages/index.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\nimport Seo from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\"\nimport { Text, Box, Flex } from \"theme-ui\"\n\ninterface IndexQuery {\n  blogPosts: {\n    nodes: any[]\n  }\n  projectPosts: {\n    nodes: any[]\n  }\n}\n\nconst Index = ({ data }: PageProps<IndexQuery>) => {\n  const blogPosts = data.blogPosts.nodes\n  const projectPosts = data.projectPosts.nodes\n\n  // Add target=\"_blank\" to external links in header\n  React.useEffect(() => {\n    const headerLinks = document.querySelectorAll('header a[href^=\"http\"]');\n    headerLinks.forEach((link) => {\n      const anchorLink = link as HTMLAnchorElement;\n      anchorLink.setAttribute('target', '_blank');\n      anchorLink.setAttribute('rel', 'noopener noreferrer');\n    });\n  }, []);\n\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n      \n      {/* Welcome Section */}\n      <Box sx={{ mb: [5, 6], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Flex sx={{ alignItems: 'center', gap: 4, flexDirection: ['column', 'row'] }}>\n          <Box sx={{ flexShrink: 0 }}>\n            <img \n              src=\"/profile.jpg\" \n              alt=\"Gustavo Vasquez\" \n              style={{ \n                width: '200px', \n                height: '200px', \n                borderRadius: '50%', \n                objectFit: 'cover' \n              }} \n            />\n          </Box>\n          <Box sx={{ flex: 1 }}>\n            <Text sx={{ fontSize: [4, 5, 6], fontWeight: `bold`, color: `heading`, mb: 2 }}>\n              Hi.\n            </Text>\n            <br />\n            <br />\n            <Text sx={{ fontSize: [2, 3], lineHeight: 1.6, mb: 3 }}>\n              My name is{' '}\n              <a \n                href=\"https://github.com/gus-vasquez\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                style={{ \n                  color: 'var(--theme-ui-colors-primary)',\n                  textDecoration: 'none',\n                  fontWeight: 'bold'\n                }}\n              >\n                Gustavo\n              </a>\n              .\n            </Text>\n            <br />\n            <Text sx={{ fontSize: [2, 3], lineHeight: 1.6, mb: 3 }}>\n              I'm an engineer by training and like all sorts of nerdy stuff.\n            </Text>\n            <br />\n            <Text sx={{ fontSize: [2, 3], lineHeight: 1.6 }}>\n              Check my{' '}\n              <Link \n                to=\"/blog\"\n                style={{ \n                  color: 'var(--theme-ui-colors-primary)',\n                  textDecoration: 'none',\n                  fontWeight: 'bold'\n                }}\n              >\n                posts\n              </Link>\n              {' '}and{' '}\n              <Link \n                to=\"/projects\"\n                style={{ \n                  color: 'var(--theme-ui-colors-primary)',\n                  textDecoration: 'none',\n                  fontWeight: 'bold'\n                }}\n              >\n                projects\n              </Link>\n              .\n            </Text>\n          </Box>\n        </Flex>\n      </Box>\n      \n      {/* Latest Posts Section - showing BLOG posts */}\n      <Box sx={{ mb: [4, 5] }}>\n        <Flex sx={{ alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>\n          <Text as=\"h2\" sx={{ fontSize: [3, 4], fontWeight: 'bold', color: 'heading', m: 0 }}>\n            Latest Posts\n          </Text>\n          <Link \n            to=\"/blog\"\n            style={{ \n              color: 'var(--theme-ui-colors-secondary)',\n              textDecoration: 'none',\n              fontSize: '0.875rem'\n            }}\n          >\n            Read all posts\n          </Link>\n        </Flex>\n        <Box sx={{ height: '1px', backgroundColor: 'text', mb: 3 }} />\n        <Listing posts={blogPosts} />\n      </Box>\n\n      {/* Latest Projects Section - showing PROJECT posts */}\n      <Box>\n        <Flex sx={{ alignItems: 'center', justifyContent: 'space-between', mb: 3 }}>\n          <Text as=\"h2\" sx={{ fontSize: [3, 4], fontWeight: 'bold', color: 'heading', m: 0 }}>\n            Latest Projects\n          </Text>\n          <Link \n            to=\"/projects\"\n            style={{ \n              color: 'var(--theme-ui-colors-secondary)',\n              textDecoration: 'none',\n              fontSize: '0.875rem'\n            }}\n          >\n            Read all projects\n          </Link>\n        </Flex>\n        <Box sx={{ height: '1px', backgroundColor: 'text', mb: 3 }} />\n        <Listing posts={projectPosts} />\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  query Index {\n    blogPosts: allPost(\n      filter: { tags: { elemMatch: { name: { eq: \"blog\" } } } }\n      sort: { date: DESC }\n      limit: 3\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        excerpt\n        description\n        timeToRead\n        tags {\n          name\n          slug\n        }\n        banner {\n          childImageSharp {\n            small: gatsbyImageData(width: 760, quality: 90)\n          }\n        }\n      }\n    }\n    projectPosts: allPost(\n      filter: { tags: { elemMatch: { name: { eq: \"project\" } } } }\n      sort: { date: DESC }\n      limit: 3\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        excerpt\n        description\n        timeToRead\n        tags {\n          name\n          slug\n        }\n        banner {\n          childImageSharp {\n            small: gatsbyImageData(width: 760, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","data","blogPosts","nodes","projectPosts","React","document","querySelectorAll","forEach","link","anchorLink","setAttribute","Layout","Seo","title","Box","sx","mb","p","fontSize","mt","variant","Flex","alignItems","gap","flexDirection","flexShrink","src","alt","style","width","height","borderRadius","objectFit","flex","Text","fontWeight","color","lineHeight","href","target","rel","textDecoration","Link","to","justifyContent","as","m","backgroundColor","Listing","posts","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","type","sizes","withPrefix","tags","tagsPath","basePath","useMinimalBlogConfig","jsx","map","tag","i","key","slug","t","_t$styles","styles","a","replaceSlashes","post","showTags","date","ItemTags","className","BlogListItem"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-blog-tsx-2e91fd6032d070a8f691.js","mappings":"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","sources":["webpack://minimal-blog/./src/pages/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\nimport Seo from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\"\nimport { Text } from \"theme-ui\"\n\ninterface BlogQuery {\n  posts: {\n    nodes: any[]\n  }\n}\n\nconst Blog = ({ data }: PageProps<BlogQuery>) => {\n  const posts = data.posts.nodes\n\n  // Add target=\"_blank\" to external links in header\n  React.useEffect(() => {\n    const headerLinks = document.querySelectorAll('header a[href^=\"http\"]');\n    headerLinks.forEach((link) => {\n      const anchorLink = link as HTMLAnchorElement;\n      anchorLink.setAttribute('target', '_blank');\n      anchorLink.setAttribute('rel', 'noopener noreferrer');\n    });\n  }, []);\n\n  return (\n    <Layout>\n      <Seo title=\"Blog\" />\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '2rem' }}>\n        <Text as=\"h1\" sx={{ fontSize: [4, 5, 6], fontWeight: 'bold', color: 'heading', m: 0 }}>Blog</Text>\n        <Link \n          to=\"/tags\"\n          style={{ \n            color: 'var(--theme-ui-colors-secondary)',\n            textDecoration: 'none',\n            fontSize: '0.875rem'\n          }}\n        >\n          View all tags\n        </Link>\n      </div>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const query = graphql`\n  query Blog {\n    posts: allPost(\n      filter: { tags: { elemMatch: { name: { eq: \"blog\" } } } }\n      sort: { date: DESC }\n    ) {\n      nodes {\n        slug\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        excerpt\n        description\n        timeToRead\n        tags {\n          name\n          slug\n        }\n        banner {\n          childImageSharp {\n            small: gatsbyImageData(width: 760, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","data","posts","nodes","React","document","querySelectorAll","forEach","link","anchorLink","setAttribute","Layout","Seo","title","style","display","alignItems","justifyContent","marginBottom","Text","as","sx","fontSize","fontWeight","color","m","Link","to","textDecoration","Listing","mt","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","href","withPrefix","tags","tagsPath","basePath","useMinimalBlogConfig","jsx","map","tag","i","key","slug","t","_t$styles","styles","a","replaceSlashes","post","showTags","Box","mb","date","ItemTags","className","BlogListItem"],"sourceRoot":""}